<html>
	<head>
		<title></title>
		<script src="prototype-1.6.0.3.js"></script>
		<style type="text/css">
.keyword
{
	font-family:verdana;
	font-size:8pt;
	color:#CC0000;
	padding:2px;
	padding-right:10px;
	background-color:none;
}

.keyword_selected
{
	background-color: #E7DAFF;
	cursor:hand;
}

.clickable
{
	cursor:hand;
}

H3
{
	font-family: century gothic, verdana, helvetica;
}

</style>
<script language="javascript">
var g_strKeyWords = "";
var g_request = null;

function keyword_mouseover(elem)
{
	elem.className = "keyword keyword_selected";
}

function keyword_mouseout(elem)
{
	elem.className = "keyword";
}

function keyword_drag(elem)
{
	
}

function keyword_dragstart(elem)
{
	
}

function keyword_dragend(elem)
{
}

function keyword_dblclick(elem)
{
	//alert(elem.innerText + "(" + elem.column + ")");
	alert(elem.outerHTML);
	
}

function keyword_noselect()
{
	event.returnValue=false;
}


function ProcessKeyPress()
{

	var strText = txKeyWords.value;
	if (strText.length >= 2)
	{
		// see whether the keywords that generated the current data are a prefix of the current text
//		var iIndex = strText.indexOf(g_strKeyWords);
		
		// if so, filter the data
//		if(iIndex == 0 && g_strKeyWords.length != strText.length)
//		{
//			FilterData();
//		}
		
		// Otherwise, request the data again
		KeywordQuery();
		//g_strKeyWords = strText;
		
		
	}
}

function KeywordQuery()
{
	new Ajax.Request("getkeywordmatches.asp?" + txKeyWords.value,{method:'get',onSuccess: function (g_request)
		{
     	  document.getElementById("dvKeywords").innerHTML = g_request.responseText;
		},
		
		onFailure: function (){dvKeywords.innerText = "epic fail!";}
	});

}

//function FilterData()
//{
//}

function ProcessResults(g_request)
{
	if(g_request.readyState == 4)
	{
		//dvKeywords.innerText = g_request.responseXML.xml;		
	
     	display();
	}
}

function display()
{
	var oXSL = new ActiveXObject("MSXML.DOMDocument");	
	//dvKeywords.innerText += (oXSL != null);

	oXSL.async = false;
	
	oXSL.load("keywords.xslt");
	dvKeywords.innerHTML = g_request.responseXML.transformNode(oXSL);
	//dvKeywords.innerText = oXSL.xml;
}

function keyword_select(elem)
{
	var parent = elem.parentElement;
	var newParent = getNextFreeCell();
	newParent.appendChild(elem);
	elem.className = "keyword";
	elem.onclick = "";
	elem.onmouseover = "";
	parent.innerHTML = "";
}

function getNextFreeCell()
{
	var tableCells = tbSelected.cells;
	var cCells = tableCells.length;
	for(var iter = 0; iter < cCells; iter++)
	{
		if(tableCells[iter].innerHTML == "")
		{
			return tableCells[iter];			
		}
	}
	// if we got here, we didn't find a free cell, so we need to add a new row.
		var row = addNewRow();
		return row.cells[0];
		
	// we should never ever get here
	return null;
}

function addNewRow()
{
	var newRow = tbSelected.insertRow();
	for(var iter=0; iter < 4; iter++)
	{
		newRow.insertCell();
	}
	
	return newRow;
}

		</script>
		
	</head>
	<body>
		<input id="txKeyWords" type="text" width="400px" onkeyup="ProcessKeyPress()" onkeypress="ProcessKeyPress()"
			NAME="txKeyWords">
		<h3 onselectstart="keyword_noselect()" onselect= "keyword_noselect()">All Keywords</h3>
		<div id="dvKeywords" style="border:1px solid #0000CC;width:500px;height:100px;" onselect= "keyword_noselect()" onselectstart="keyword_noselect()"></div>
		<h3 onselectstart="keyword_noselect()" onselect= "keyword_noselect()">Selected keywords</h3>
		<div id="dvSelected" style="background-color:EDFDA2;border:1px solid #005200;width:500px;height:100px;" onselect= "keyword_noselect()" onselectstart="keyword_noselect()">
			<table id="tbSelected">
				<tr>
					<td></td>
					<td></td>
					<td></td>
					<td></td>
				</tr>
			</table>
		</div>
		<div id=dvSessions></div>
	</body>
</html>
